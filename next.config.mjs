// @ts-check
'use strict';

import { deepMergeConfig } from '@-xun/symbiote/assets';
import { moduleExport } from '@-xun/symbiote/assets/next.config.mjs';
import { createDebugLogger } from 'rejoinder';

const debug = createDebugLogger({ namespace: 'symbiote:config:next' });

/**
 * @type {import('next').NextConfig}
 */
const baseConfig = moduleExport({
  derivedAliases: getNextJsAliases(),
  projectRoot: import.meta.dirname,
  configureWebpack(currentConfig) {
    currentConfig.module.rules.push({
      // XXX: delete this whole thing
      loader: '/repos/.nhscc/drive.api.hscc.bdpa.org/ignore.loader.mjs'
    });

    return currentConfig;
  }
});

const config = deepMergeConfig(baseConfig, {
  // Any custom configs here will be deep merged with moduleExport's result
});

export default config;

debug('exported config: %O', config);

function getNextJsAliases() {
  // ! These aliases are auto-generated by symbiote. Instead of modifying them
  // ! directly, consider regenerating aliases across the entire project with:
  // ! `npx symbiote project renovate --regenerate-assets --assets-preset ...`
  return {
    universe$: 'src/index.ts',
    'universe:*': 'src/*',
    'universe+backend$': 'packages/backend/src/index.ts',
    'universe+shared$': 'packages/shared/src/index.ts',
    'universe+backend:*': 'packages/backend/src/*',
    'universe+shared:*': 'packages/shared/src/*',
    'multiverse+backend$': 'packages/backend/src/index.ts',
    'multiverse+shared$': 'packages/shared/src/index.ts',
    'multiverse+backend:*': 'packages/backend/src/*',
    'multiverse+shared:*': 'packages/shared/src/*',
    'testverse:*': 'test/*',
    'testverse+backend:*': 'packages/backend/test/*',
    'testverse+shared:*': 'packages/shared/test/*',
    'typeverse:*': 'types/*',
    'rootverse+backend:*': 'packages/backend/*',
    'rootverse+shared:*': 'packages/shared/*',
    'rootverse:*': '*'
  };
}
